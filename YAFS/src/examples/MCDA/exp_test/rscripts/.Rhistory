# Vector containing names of criteria
criteria <- c( "CR1")
# vector indicating the direction of the criteria evaluation
minmaxcriteria <- c("min")
# criteriaWeights vector
# thresholds vector
IndifferenceThresholds <- c(1)
PreferenceThresholds <- c(4)
VetoThresholds <- c(4)
criteriaWeights <- c(1)
Electre3_SimpleThresholds(performanceMatrix,
alternatives,
criteria,
minmaxcriteria,
criteriaWeights,
IndifferenceThresholds,
PreferenceThresholds,
VetoThresholds)
performanceMatrix <- cbind(
c(2,6,8,13,16)
)
alternatives <- c("Project1","Project2","Project3","Project4","Project5")
# Vector containing names of criteria
criteria <- c( "CR1")
# vector indicating the direction of the criteria evaluation
minmaxcriteria <- c("min")
# criteriaWeights vector
# thresholds vector
IndifferenceThresholds <- c(1)
PreferenceThresholds <- c(4)
VetoThresholds <- c(5)
criteriaWeights <- c(1)
Electre3_SimpleThresholds(performanceMatrix,
alternatives,
criteria,
minmaxcriteria,
criteriaWeights,
IndifferenceThresholds,
PreferenceThresholds,
VetoThresholds)
performanceMatrix <- cbind(
c(2,6,8,13,16)
)
alternatives <- c("Project1","Project2","Project3","Project4","Project5")
# Vector containing names of criteria
criteria <- c( "CR1")
# vector indicating the direction of the criteria evaluation
minmaxcriteria <- c("min")
# criteriaWeights vector
# thresholds vector
IndifferenceThresholds <- c(1)
PreferenceThresholds <- c(4)
VetoThresholds <- c(15)
criteriaWeights <- c(1)
Electre3_SimpleThresholds(performanceMatrix,
alternatives,
criteria,
minmaxcriteria,
criteriaWeights,
IndifferenceThresholds,
PreferenceThresholds,
VetoThresholds)
performanceMatrix <- cbind(
c(2,3,8,13,16)
)
alternatives <- c("Project1","Project2","Project3","Project4","Project5")
# Vector containing names of criteria
criteria <- c( "CR1")
# vector indicating the direction of the criteria evaluation
minmaxcriteria <- c("min")
# criteriaWeights vector
# thresholds vector
IndifferenceThresholds <- c(1)
PreferenceThresholds <- c(4)
VetoThresholds <- c(15)
criteriaWeights <- c(1)
Electre3_SimpleThresholds(performanceMatrix,
alternatives,
criteria,
minmaxcriteria,
criteriaWeights,
IndifferenceThresholds,
PreferenceThresholds,
VetoThresholds)
performanceMatrix <- cbind(
c(2,2,8,13,16)
)
alternatives <- c("Project1","Project2","Project3","Project4","Project5")
# Vector containing names of criteria
criteria <- c( "CR1")
# vector indicating the direction of the criteria evaluation
minmaxcriteria <- c("min")
# criteriaWeights vector
# thresholds vector
IndifferenceThresholds <- c(1)
PreferenceThresholds <- c(4)
VetoThresholds <- c(15)
criteriaWeights <- c(1)
Electre3_SimpleThresholds(performanceMatrix,
alternatives,
criteria,
minmaxcriteria,
criteriaWeights,
IndifferenceThresholds,
PreferenceThresholds,
VetoThresholds)
performanceMatrix <- cbind(
c(2,7,8,13,16)
)
alternatives <- c("Project1","Project2","Project3","Project4","Project5")
# Vector containing names of criteria
criteria <- c( "CR1")
# vector indicating the direction of the criteria evaluation
minmaxcriteria <- c("min")
# criteriaWeights vector
# thresholds vector
IndifferenceThresholds <- c(1)
PreferenceThresholds <- c(4)
VetoThresholds <- c(15)
criteriaWeights <- c(1)
Electre3_SimpleThresholds(performanceMatrix,
alternatives,
criteria,
minmaxcriteria,
criteriaWeights,
IndifferenceThresholds,
PreferenceThresholds,
VetoThresholds)
performanceMatrix <- cbind(
c(2,7,8,13,16)
)
alternatives <- c("Project1","Project2","Project3","Project4","Project5")
# Vector containing names of criteria
criteria <- c( "CR1")
# vector indicating the direction of the criteria evaluation
minmaxcriteria <- c("max")
# criteriaWeights vector
# thresholds vector
IndifferenceThresholds <- c(1)
PreferenceThresholds <- c(4)
VetoThresholds <- c(15)
criteriaWeights <- c(1)
Electre3_SimpleThresholds(performanceMatrix,
alternatives,
criteria,
minmaxcriteria,
criteriaWeights,
IndifferenceThresholds,
PreferenceThresholds,
VetoThresholds)
performanceMatrix <- cbind(
c(2,7,8,13,16)
)
alternatives <- c("Project1","Project2","Project3","Project4","Project5")
# Vector containing names of criteria
criteria <- c( "CR1")
# vector indicating the direction of the criteria evaluation
minmaxcriteria <- c("min")
# criteriaWeights vector
# thresholds vector
IndifferenceThresholds <- c(1)
PreferenceThresholds <- c(4)
VetoThresholds <- c(15)
criteriaWeights <- c(1)
Electre3_SimpleThresholds(performanceMatrix,
alternatives,
criteria,
minmaxcriteria,
criteriaWeights,
IndifferenceThresholds,
PreferenceThresholds,
VetoThresholds)
performanceMatrix <- cbind(
c(2,7,8,13,16),
c(20,16,23,3,10)
)
alternatives <- c("Project1","Project2","Project3","Project4","Project5")
# Vector containing names of criteria
criteria <- c( "R","W")
# vector indicating the direction of the criteria evaluation
minmaxcriteria <- c("min","min")
# criteriaWeights vector
# thresholds vector
IndifferenceThresholds <- c(1,5)
PreferenceThresholds <- c(4,15)
VetoThresholds <- c(15,30)
criteriaWeights <- c(1,1)
Electre3_SimpleThresholds(performanceMatrix,
alternatives,
criteria,
minmaxcriteria,
criteriaWeights,
IndifferenceThresholds,
PreferenceThresholds,
VetoThresholds)
args1= "/Users/isaaclera/PycharmProjects/YAFS/src/examples/MCDA/exp_test/data"
args2= "/data"
pathIN <- paste(args1,args2,".csv",sep="")
colClasses <- c("NULL",rep("numeric", count.fields(pathIN, sep=",")[1] -2))
performanceMatrix <- read.table(file=pathIN, header=F, sep=",",colClasses=colClasses,skip=1)
colClasses
performanceMatrix
args1= "/Users/isaaclera/PycharmProjects/YAFS/src/examples/MCDA/exp_test/data"
args2= "/data"
pathIN <- paste(args1,args2,".csv",sep="")
colClasses <- c("NULL",rep("numeric", count.fields(pathIN, sep=",")[1] -1))
performanceMatrix <- read.table(file=pathIN, header=F, sep=",",colClasses=colClasses,skip=1)
performanceMatrix
performanceMatrix
rownames(performanceMatrix)
alternatives <- rownames(performanceMatrix)
Electre3_SimpleThresholds(performanceMatrix,
alternatives,
criteria,
minmaxcriteria,
criteriaWeights,
IndifferenceThresholds,
PreferenceThresholds,
VetoThresholds)
alternatives
performanceMatrix
criteria <- colnames(performanceMatrix)
criteria
alternatives
performanceMatrix
performanceMatrix
colnames(performanceMatrix)
len(colnames(performanceMatrix))
length(colnames(performanceMatrix))
args[5] = "1,10,3"
args = "1,10,3"
args5 = "1,10,3"
args5
tmp <- as.numeric(unlist(strsplit(args5, ",")))
tmp
Electre3_SimpleThresholds
Electre3_SimpleThresholds(performanceMatrix,
alternatives,
criteria,
minmaxcriteria,
criteriaWeights,
IndifferenceThresholds,
PreferenceThresholds,
VetoThresholds)
performanceMatrix <- cbind(
c(2,7,8,13,16),
c(20,16,23,3,10)
)
alternatives <- c("Project1","Project2","Project3","Project4","Project5")
# Vector containing names of criteria
criteria <- c( "R","W")
# vector indicating the direction of the criteria evaluation
minmaxcriteria <- c("min","min")
# criteriaWeights vector
# thresholds vector
IndifferenceThresholds <- c(1,5)
PreferenceThresholds <- c(4,15)
VetoThresholds <- c(15,30)
criteriaWeights <- c(1,1)
Electre3_SimpleThresholds(performanceMatrix,
alternatives,
criteria,
minmaxcriteria,
criteriaWeights,
IndifferenceThresholds,
PreferenceThresholds,
VetoThresholds)
source('~/PycharmProjects/YAFS/src/examples/MCDA/exp_test/rscripts/ELECTREv1.R', echo=TRUE)
alternatives <- c("Project1","Project2","Project3","Project4","Project5")
# Vector containing names of criteria
criteria <- c( "R","W")
# vector indicating the direction of the criteria evaluation
minmaxcriteria <- c("min","min")
# criteriaWeights vector
# thresholds vector
IndifferenceThresholds <- c(1,5)
PreferenceThresholds <- c(4,15)
VetoThresholds <- c(15,30)
criteriaWeights <- c(1,1)
Electre3_SimpleThresholds(performanceMatrix,
alternatives,
criteria,
minmaxcriteria,
criteriaWeights,
IndifferenceThresholds,
PreferenceThresholds,
VetoThresholds)
out <- Electre3_SimpleThresholds(performanceMatrix,
alternatives,
criteria,
minmaxcriteria,
criteriaWeights,
IndifferenceThresholds,
PreferenceThresholds,
VetoThresholds)
out
performanceMatrix <- cbind(
c(2,7,8,13,16),
c(20,16,23,3,10)
)
alternatives <- c("Project1","Project2","Project3","Project4","Project5")
# Vector containing names of criteria
criteria <- c( "R","W")
# vector indicating the direction of the criteria evaluation
minmaxcriteria <- c("min","min")
# criteriaWeights vector
# thresholds vector
IndifferenceThresholds <- c(1,5)
PreferenceThresholds <- c(4,15)
VetoThresholds <- c(15,30)
criteriaWeights <- c(1,1)
out <- Electre3_SimpleThresholds(performanceMatrix,
alternatives,
criteria,
minmaxcriteria,
criteriaWeights,
IndifferenceThresholds,
PreferenceThresholds,
VetoThresholds)
out
performanceMatrix <- cbind(
c(2,7,8,13,16),
c(20,16,23,3,10)
)
alternatives <- c("Project1","Project2","Project3","Project4","Project5")
# Vector containing names of criteria
criteria <- c( "R","W")
# vector indicating the direction of the criteria evaluation
minmaxcriteria <- c("min","min")
# criteriaWeights vector
# thresholds vector
IndifferenceThresholds <- c(1,5)
PreferenceThresholds <- c(4,15)
VetoThresholds <- c(15,30)
criteriaWeights <- c(1,1)
out = Electre3_SimpleThresholds(performanceMatrix,
alternatives,
criteria,
minmaxcriteria,
criteriaWeights,
IndifferenceThresholds,
PreferenceThresholds,
VetoThresholds)
performanceMatrix <- cbind(
c(2,7,8,13,16),
c(20,16,23,3,10)
)
alternatives <- c("Project1","Project2","Project3","Project4","Project5")
# Vector containing names of criteria
criteria <- c( "R","W")
# vector indicating the direction of the criteria evaluation
minmaxcriteria <- c("min","min")
# criteriaWeights vector
# thresholds vector
IndifferenceThresholds <- c(1,5)
PreferenceThresholds <- c(4,15)
VetoThresholds <- c(15,30)
criteriaWeights <- c(1,1)
out <- Electre3_SimpleThresholds(performanceMatrix,
alternatives,
criteria,
minmaxcriteria,
criteriaWeights,
IndifferenceThresholds,
PreferenceThresholds,
VetoThresholds)
performanceMatrix <- cbind(
c(2,7,8,13,16),
c(20,16,23,3,10)
)
alternatives <- c("Project1","Project2","Project3","Project4","Project5")
# Vector containing names of criteria
criteria <- c( "R","W")
# vector indicating the direction of the criteria evaluation
minmaxcriteria <- c("min","min")
# criteriaWeights vector
# thresholds vector
IndifferenceThresholds <- c(1,5)
PreferenceThresholds <- c(4,15)
VetoThresholds <- c(15,30)
criteriaWeights <- c(1,1)
out <- Electre3_SimpleThresholds(performanceMatrix,
alternatives,
criteria,
minmaxcriteria,
criteriaWeights,
IndifferenceThresholds,
PreferenceThresholds,
VetoThresholds)
out
print(out)
fileConn<-file("output.txt")
writeLines(out, fileConn)
close(fileConn)
print(out["Final Ranking Matrix"])
print(out["Final Ranking Matrix"])
fileConn<-file("output.txt")
writeLines(out["Final Ranking Matrix"], fileConn)
close(fileConn)
print(out["Final Ranking Matrix"])
fileConn<-file("output.txt")
writeLines(out["Final Ranking Matrix"], fileConn)
close(fileConn)
type(out["Final Ranking Matrix"])
out["Final Ranking Matrix"]
write(out["Final Ranking Matrix"], fileConn)
fileConn<-file("output.txt")
write(out["Final Ranking Matrix"], fileConn)
close(fileConn)
cat(out["Final Ranking Matrix"])
out["Final Ranking Matrix"][0]
out["Final Ranking Matrix"][1]
out["Final Ranking Matrix"][1][0]
out["Final Ranking Matrix"][1][1]
out["Final Ranking Matrix"][1][2]
out["Final Ranking Matrix"][1][1][0]
out["Final Ranking Matrix"][1][1][1]
df <- out["Final Ranking Matrix"]
View(df)
View(df)
df.ranking
df[:]
df
write.csv(MyData, file = "MyData.csv"
write.csv(MyData, file = "MyData.csv")
write.csv(MyData, file = "MyData.csv")
write.csv(df, file = "MyData.csv")
write.csv(df, file = "output.txt")
out["Final Ranking Matrix"]
df
df[,c(1,2,5)]
df[,c(1)]
df[,]
df[,1]
df[0,1]
df[:1]
df
df.alternative
df.alternative
df["alternative"]
df(0)
print(out["Final Ranking Matrix"])
cat(out["Final Ranking Matrix"])
print(out["Final Ranking Matrix"])
pathOUT
source('~/PycharmProjects/YAFS/src/examples/MCDA/exp_test/rscripts/ELECTREv1.R', echo=TRUE)
source(Electre3_vI.r)
source(Electre3.R)
source("Electre3.R")
source("Electre3.R")
setwd("~/PycharmProjects/YAFS/src/examples/MCDA/exp_test")
setwd("~/PycharmProjects/YAFS/src/examples/MCDA/exp_test/rscripts")
source("Electre3.R")
source("Electre3.R")
source("Electre3.R")
source("Electre3.R")
source("Electre3.R")
out <- Electre3_SimpleThresholds2(performanceMatrix,
alternatives,
criteria,
minmaxcriteria,
criteriaWeights,
IndifferenceThresholds,
PreferenceThresholds,
VetoThresholds)
print(pathOUT)
minmaxcriteria
final_ranking
out["Final Ranking Matrix"]
alternatives <- c("Project1","Project2","Project3","Project4","Project5")
# Vector containing names of criteria
criteria <- c( "R","W")
# vector indicating the direction of the criteria evaluation
minmaxcriteria <- c("min","min")
# criteriaWeights vector
# thresholds vector
IndifferenceThresholds <- c(1,5)
PreferenceThresholds <- c(4,15)
VetoThresholds <- c(15,30)
criteriaWeights <- c(1,1)
out <- Electre3_SimpleThresholds(performanceMatrix,
alternatives,
criteria,
minmaxcriteria,
criteriaWeights,
IndifferenceThresholds,
PreferenceThresholds,
VetoThresholds)
print(out)
print(out['Final Ranking Matrix'])
print(out['Final Ranking Matrix']["alternative"])
print(out['Final Ranking Matrix'][["alternative"]])
print(out['Final Ranking Matrix'])
df <- out['Final Ranking Matrix']
colnames(df)
names(df)
names(df['Final Ranking Matrix'])
names(df[[]])
names(df)
df2 <- data.frame( c( 183, 85, 40), c( 175, 76, 35), c( 178, 79, 38 ))
df <- data.frame(out['Final Ranking Matrix'])
df
names(df)
df[:,1]
df[:]
df["Final.Ranking.Matrix.alternative"]
df["Final.Ranking.Matrix.alternative"][0]
df["Final.Ranking.Matrix.alternative"][1]
df["Final.Ranking.Matrix.alternative"][2]
df["Final.Ranking.Matrix.alternative"][1,:]
df["Final.Ranking.Matrix.alternative"]
print(df["Final.Ranking.Matrix.alternative"])
